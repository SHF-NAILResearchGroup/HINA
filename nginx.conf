events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    listen 8080;
    server_name localhost;
    client_max_body_size 100M;
    
    # # Health check endpoint
    # location = /health {
    #   add_header Content-Type text/plain;
    #   return 200 'ok';
    # }
    # # Health check for the backend service
    # location = /api-health {
    #   proxy_pass http://0.0.0.0:8000/health;
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   error_page 502 = @health_fallback;
    # }
    
    # location @health_fallback {
    #   add_header Content-Type text/plain;
    #   return 503 "API backend not ready";
    # }
    
    # Forward API requests to the backend
    location ~ ^/(upload|build-hina-network|build-cluster-network|build-object-network|quantity-diversity|.*\.py) {
      proxy_pass http://127.0.0.1:8000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header X-Real-IP $remote_addr;
      
      # proxy_read_timeout 300s;
      # proxy_connect_timeout 300s;
      # proxy_send_timeout 300s;
      
      # proxy_intercept_errors on;
      # error_page 500 502 503 504 = @error_page;
    }
    
    # location @error_page {
    #   add_header Content-Type text/plain;
    #   return 502 "Backend server unavailable. Please try again later.";
    # }

    location / {
      root /app/hina/app/frontend/dist;
      try_files $uri $uri/ /index.html;
      add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
    
  }
}

